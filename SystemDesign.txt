----------------------------------------------------

FileUtil
### data
### filepath
--> importPEM
--> exportPEM
--> importMessage
--> exportMessage

----------------------------------------------------

SHA1
### data
### hash1, hash2
--> generateHash
--> compareHashes

Algorithm
### key
--> encryptMessage
--> decryptMessage

RSA [Algorithm]
### key
### name
### mail
### size (1024/2048)
### filepath
--> generateKey
--> importKey
--> exportKey
--> importPublic
--> exportPublic
--> encryptMessage
--> decryptMessage

3DES [Algorithm]
### key
--> encryptMessage
--> decryptMessage

AES128 [Algorithm]
### key
--> encryptMessage
--> decryptMessage

----------------------------------------------------

PublicRingRow
*** Timestamp
*** PublicKey
*** KeyID
*** UserID

PrivateRingRow [PublicRingRow]
### name
### mail
### size (1024/2048)
### password
*** Algorithm
*** HashedPassword
*** EncryptedPrivateKey
--> getPrivateKey
--> hashPassword
--> encryptPrivateKey
--> decryptPrivateKey

----------------------------------------------------

Options
***	Encryption
*** Authentication
*** Compression
*** Radix64
*** Algorithm
--> createOptionsObject

MessageComponent
*** Timestamp
*** KeyID

SignatureComponent [MessageComponent]
***	Timestamp
*** KeyID
*** Digest
-->	encryptDigest
-->	decryptDigest
-->	createSignatureComponentObject

SessionKeyComponent [MessageComponent]
***	Timestamp
*** KeyID
***	SessionKey
-->	encryptSessionKey
-->	decryptSessionKey
--> createSessionKeyComponentObject

Message
*** Options (Raw)
*** Filename
*** Data
*** Timestamp
-->	createMessageObject
-->	generateSignature
--> generateSignatureComponent
--> generateSessionKey
--> generateSessionKeyComponent
--> encryptMessage
--> !!! sendMessage
--> decryptMessage
--> verifySignature (generateSignature, decryptSignature)
--> !!! receiveMessage

###	on frontend, we check what options have been selected
### based on those options, we fill Options field in Message
### based on those options, we (don't) call specific methods

### on frontend, we have field: SenderKeyID (for private key)
### on frontend, we have field: RecipientKeyID (for public key)
### based on selected values, we choose rows from Private/PublicRing

### on frontend, we have field: Algorithm
### based on that value, we fill Algorithm field in Message
### based on that value, we apply correspondent Encryption/Decryption

----------------------------------------------------